{"name":"Wordpress-scanner","tagline":"Wordpress Vulnerability Scanner","body":"#### Introduction\r\n\r\nA Wordpress Scanner written in PHP, focus on vulnerability assessment and security audit of misconfiguration in the Wordpress installation.\r\nWordpress Scanner is capable of finding the flaw in the Wordpress installation and will provide all the information regarding the vulnerability.\r\nWordpress Scanner is not a tool for code auditing, it performs \"black box\" scanning for the Wordpress powered web application.\r\n\r\nThe basic security check will review a WordPress installation for common security related mis-configurations. Testing with the basic check option uses regular web requests.\r\nThe system downloads a handful of pages from the target site, then performs analysis on the resulting html source.\r\n\r\n#### Usage\r\n```\r\nUsage: php app.php [options]\r\n\r\nOptions:\r\n        -h,   --help                    Show this help message.\r\n        -u,   --url                     Target URL (e.g. \"http://mywp.com/\")\r\n        -f,   --force                   Ignore if target is not wordpress.\r\n        -v,   --version                 Check for available version\r\n        --upgrade                       Upgrade to newer version\r\n        --wpvulndb                      Use WPVulnDB API Instead of local database. (Powered by wpvulndb.com API)\r\n        --no-log                        Disable Logging\r\n\r\nRequest:\r\n        --ua, --user-agent              Set user-agent, default: random user agent\r\n        -t,   --thread                  numbers of threads, default: 10\r\n        --proxy                         Set proxy. eg: protocol://[username:password@]host:port\r\n\r\nScanning:\r\n        -d,   --default                 Default scanning mode\r\n                                        Equivalent to --dp,--dt,--b option\r\n        -b,   --basic                   Show basic information about target\r\n                                        Eg: robots.txt path, check multisite, registration enable, readme file\r\n        --dp, --discover-plugin         Discover plugin(s) via html source\r\n        --dt, --discover-theme          Discover theme(s) via html source\r\n\r\nPlugin/Theme Enumeration:\r\n        --ep, --enumerate-plugin        Enumerate plugins\r\n        --et, --enumerate-theme         Enumerate themes\r\n        --vp, --vuln-plugin             Enumerate vulnerable plugins only\r\n        --vt, --vuln-theme              Enumerate vulnerable themes only\r\n\r\nUser Enumeration:\r\n        --eu, --enumerate-user          Enumerate users\r\n        -i,   --iterate                 numbers of iteration, default: 10\r\n        -f,   --feed                    Enumerate through rss feeds, default: author pages\r\n        -B,   --ubrute                  Set wordlist file(full path) to bruteforce username, default will use built-in wordlist\r\n        -p,   --protect                 Check if the site is protected before bruteforcing, use with -B or --ubrute\r\n\r\nBruteforce:\r\n        --bf, --bruteforce              Bruteforce Mode\r\n        -x, --xmlrpc                    Bruteforce through XMLRPC interface.\r\n        -p, --protect                   Check if the site is protected before bruteforcing.\r\n        -F, --ufound                    Set username to enumerated users.\r\n        -U, --user                      Set username or file containing user lists.\r\n        -w, --wordlist                  Set wordlist file(full path), default will use built-in wordlist.\r\n```\r\n\r\n#### Requirements\r\n\r\n- At least PHP 5.4\r\n- PHP cURL Extension\r\n- PHP JSON Extension\r\n\r\n\r\n#### Installation\r\n\r\n##### Windows\r\n\r\n```Download http://windows.php.net/downloads/releases/php-5.4.41-Win32-VC9-x86.zip```\r\n\r\n```Tick cURL Extension on installation step```\r\n\r\n##### Ubuntu/Debian-based\r\n\r\n```sudo apt-get install php5 php5-curl php5-json```\r\n\r\n##### Mac OSX\r\n\r\n```curl -s http://php-osx.liip.ch/install.sh | bash -s 5.4```\r\n\r\n#### To Do List\r\n- Rewrite code to be more modular\r\n- Unit Tests\r\n- Add Web UI\r\n- Add custom wordpress directory(wp-content and wp-plugin)\r\n- Vulnerability Database (currently using https://wpvulndb.com)\r\n\r\n\r\n### Contribution\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Make your changes\r\n4. Commit your changes (`git commit -am 'Added some feature'`)\r\n5. Push to the branch (`git push origin my-new-feature`)\r\n6. Create new Pull Request\r\n7. Pat yourself on the back for being so awesome\r\n\r\n### License\r\n\r\nMIT License. Copyright (c) 2015 Ahmad Ramadhan Amizudin. See [License](https://github.com/RamadhanAmizudin/Wordpress-scanner/blob/master/LICENSE.txt).\r\n\r\n### Contacts\r\n\r\nramadhan.amizudin at gmail dot com\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}